{
  "swagger": "2.0",
  "info": {
    "description": "API for a Awana App",
    "version": "v2",
    "title": "Llamahub API"
  },
  "host": "api.awana.io",
  "basePath": "/dev",
  "schemes": [
    "https"
  ],
  "paths": {
    "/campaigns": {
      "get": {
        "operationId": "getCampaigns",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "jwt-rsa-custom-authorizer": []
          }
        ],
        "responses": {
          "200": {
            "description": "It will return a list of all the currently available hiring campaigns.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400 response"
          }
        }
      },
      "post": {
        "description": "Insert or Update an specific campaign, you need to send the id in Body to update, otherwise, create a new campaign",
        "operationId": "addCampaign",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Campaign",
            "description": "Insert or Update an specific campaign, you need to send the id in Body to update, otherwise, create a new campaign",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response. Campaign was created succesfully.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "201": {
            "description": "201 response"
          },
          "400": {
            "description": "400 response"
          },
          "409": {
            "description": "409 response"
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {}
      }
    },
    "/campaigns/{id}": {
      "get": {
        "operationId": "getCampaign",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "400": {
            "description": "400 response"
          },
          "404": {
            "description": "404 response"
          }
        }
      }
    },
    "/candidates": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "security": [
          {
            "jwt-rsa-custom-authorizer": []
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400 response"
          },
          "404": {
            "description": "404 response"
          },
          "500": {
            "description": "Server error, please check the logs."
          }
        }
      },
      "post": {
        "description": "Insert or Update an specific candidate, you need to send the id in Body to update, otherwise, create a new candidate",
        "operationId": "addCandidate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Candidate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Candidate"
            }
          }
        ],
        "security": [
          {
            "jwt-rsa-custom-authorizer": []
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Candidate"
            }
          },
          "400": {
            "description": "400 response"
          },
          "409": {
            "description": "409 response"
          }
        }
      },
      "delete": {
        "parameters": [],
        "responses": {}
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/candidates/profilepic/{id}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response"
          }
        }
      }
    },
    "/candidates/{id}": {
      "get": {
        "description": "Used to search a Candidates by ID param",
        "operationId": "getCandidate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Candidate"
            }
          },
          "400": {
            "description": "400 response"
          },
          "404": {
            "description": "404 response"
          }
        }
      }
    },
    "/companies": {
      "get": {
        "description": "To get all the companies, you need to send the token authentication before",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "security": [
          {
            "jwt-rsa-custom-authorizer": []
          }
        ],
        "responses": {}
      },
      "post": {
        "description": "Insert or Update an specific company, you need to send the id in Body to update, otherwise, create a new company",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {}
      }
    },
    "/companies/{id}": {
      "get": {
        "description": "Used to search a company by ID param",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "jwt-rsa-custom-authorizer": []
          }
        ],
        "responses": {}
      }
    },
    "/users/search?email={email}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    }
  },
  "securityDefinitions": {
    "jwt-rsa-custom-authorizer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "x-amazon-apigateway-authtype": "custom"
    }
  },
  "definitions": {
    "Candidate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Key Identifier for Candidate",
          "example":"CXoadmaspjiq231208dasd"
        },
        "first_name": {
          "type": "string",
          "description": "First Name of the Candidate",
          "example":"Peter"
        },
        "last_name": {
          "type": "string",
          "description": "Last Name of the Candidate",
          "example":"Smith"
        },
        "profile_picture": {
          "type": "string",
          "description": "Profile picture of the candidate",
          "example":"https://images.hyrellama.com/profiles/{{ Candidate ID }}/profile.jpg"
        },
        "email": {
          "type": "string",
          "description": "Candidate Email",
          "example":"candidate@gmail.com"
        },
        "phone_number": {
          "type": "string",
          "description": "Camdidate Telefone Number",
          "example":"+591 69861xxx" 
        },
        "headline": {
          "type": "string",
          "description": "The candidate profile header",
          "example":"Systems Engineer - Software Developer" 
        },
        "about": {
          "type": "string",
          "description": "A brief introduction about the candidate",
          "example":"I am a software developer, I have almost 3 years of experience. I have knowledge of Java, Python, Javascript, SQL and No SQL, React and Angular. " 
        },
        "current_position": {
          "type": "string",
          "description": "Current position of the candidate",
          "example":"Software Developer Analyst (None if the candidate does not have)"
        },
        "country": {
          "type": "string",
          "description": "Candidate's Hometown",
          "example":"Bolivia"
        },
        "industry": {
          "type": "string",
          "description": "Area that dedicates or profiles the candidate",
          "example":"Banking"
        },
        "github_repository": {
          "type": "string",
          "description": "Url of the Candidate GitHub Repository",
          "example":"https://github.com/Luchin111"
        },
        "english_level": {
          "type": "string",
          "description": "English level according to CEFR standard",
          "example":"C1"
        },
        "remaining_time": {
          "type": "string",
          "description": "",
          "example":""
        },
        "education": {
          
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Candidate Education List, specifying all the corresponding information",
          "example":{
            "1":{
              "graduation_date": "2020-01-20",
              "institution": "Catholic University of .....",
              "degree":"Systems Engineer",
              "still_attending": false,
              "education_level": "Bachelors",
              "location": "Bolivia",
              "is_online": false,
              "start_date": "2014-03-06"
            }
          }
          
        },
        "social_media": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Candidate's social networks",
          "example":{
            "twitter": "",
            "facebook": "https://www.facebook.com/profile.php?id=csadasdcxxxxx",
            "linkedin": "https://www.linkedin.com/in/luis-humberto-medina-medina-617275200/"
          }
        },
        "coding_languages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Programming languages that the candidate handles",
          "example":{
            "1":{
              "name": "Java",
              "level": "Proficient"
            }
            
          }
        },
        "experiences": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Candidate Work Experiences",
          "example":{
            "1":{
              "end_date": "2020-01-17",
              "technologies": [
                {
                "value": "language:Java",
                "label": "Java"
                },
                {
                "value": "language:JavaScript",
                "label": "JavaScript"
                },
                {
                "value": "database:MySQL",
                "label": "MySQL"
                },
                {
                "value": "database:MongoDB",
                "label": "MongoDB"
                },
                {
                "value": "technology:Mobile App Development",
                "label": "Mobile App Development"
                }
              ],
              "employment_type": "Full Time",
              "company": "AlterBios",
              "still_attending": false,
              "location": "Ecuador",
              "is_online": false,
              "job_title": "Software Developer",
              "start_date": "2021-03-01"
            }
            
          }
        },
        "tech_skills": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Technology used by the Candidate and the level of expertise",
          "example":{
            "1":{
              "value": "framework:Angular",
              "level": "Beginner",
              "label": "Angular"
            }
            
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Not used"
        },
        "projects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "interview": {
          "$ref": "#/definitions/Candidate_interview"
        },
        "website": {
          "type": "string"
        }
      }
    },
    "Campaign": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "campaign_name": {
          "type": "string"
        },
        "experience": {
          "type": "number"
        },
        "level": {
          "type": "number"
        },
        "english_level": {
          "type": "number"
        },
        "company": {
          "$ref": "#/definitions/Campaign_company"
        },
        "description": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "Candidate_interview": {
      "type": "object",
      "properties": {
        "sourcer": {
          "type": "string"
        }
      }
    },
    "Campaign_company": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "company_name": {
          "type": "string"
        }
      }
    }
  },
  "x-amazon-apigateway-endpoint-configuration": {
    "disableExecuteApiEndpoint": true
  }
}
